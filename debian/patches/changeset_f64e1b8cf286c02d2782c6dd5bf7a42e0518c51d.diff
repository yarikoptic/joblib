From: Olivier Grisel <olivier.grisel@ensta.org>
Subject: MAINT remove brittle time based assertion in test (#761)
  * MAINT remove brittle time based assertion in test

* Limit the number of worker processes in dask test

--- a/joblib/test/test_parallel.py
+++ b/joblib/test/test_parallel.py
@@ -1180,31 +1180,23 @@ def test_delayed_check_pickle_deprecated
 @parametrize('backend', ['multiprocessing', 'loky'])
 def test_backend_batch_statistics_reset(backend):
     """Test that a parallel backend correctly resets its batch statistics."""
-    relative_tolerance = 0.2
     n_jobs = 2
     n_inputs = 500
     task_time = 2. / n_inputs
 
     p = Parallel(verbose=10, n_jobs=n_jobs, backend=backend)
-    start_time = time.time()
     p(delayed(time.sleep)(task_time) for i in range(n_inputs))
-    ref_time = time.time() - start_time
     assert (p._backend._effective_batch_size ==
             p._backend._DEFAULT_EFFECTIVE_BATCH_SIZE)
     assert (p._backend._smoothed_batch_duration ==
             p._backend._DEFAULT_SMOOTHED_BATCH_DURATION)
 
-    start_time = time.time()
     p(delayed(time.sleep)(task_time) for i in range(n_inputs))
-    test_time = time.time() - start_time
     assert (p._backend._effective_batch_size ==
             p._backend._DEFAULT_EFFECTIVE_BATCH_SIZE)
     assert (p._backend._smoothed_batch_duration ==
             p._backend._DEFAULT_SMOOTHED_BATCH_DURATION)
 
-    # Tolerance in the timing comparison to avoid random failures on CIs
-    assert test_time / ref_time <= 1 + relative_tolerance
-
 
 def test_backend_hinting_and_constraints():
     for n_jobs in [1, 2, -1]:
@@ -1375,7 +1367,7 @@ def test_nested_parallelism_limit(backen
 @with_numpy
 def test_nested_parallelism_with_dask():
     distributed = pytest.importorskip('distributed')
-    client = distributed.Client()  # noqa
+    client = distributed.Client(n_workers=2, threads_per_worker=2)  # noqa
 
     # 10 MB of data as argument to trigger implicit scattering
     data = np.ones(int(1e7), dtype=np.uint8)
